<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="wsh__shell__esc_8h" kind="file" language="C++">
    <compoundname>wsh_shell_esc.h</compoundname>
    <includes local="yes">wsh_shell_cfg.h</includes>
    <includes refid="wsh__shell__history_8h" local="yes">wsh_shell_history.h</includes>
    <includes refid="wsh__shell__io_8h" local="yes">wsh_shell_io.h</includes>
    <includedby refid="wsh__shell_8h" local="yes">src/wsh_shell.h</includedby>
    <includedby refid="wsh__shell__esc_8c" local="yes">src/wsh_shell_esc.c</includedby>
    <incdepgraph>
      <node id="9">
        <label>stdbool.h</label>
      </node>
      <node id="8">
        <label>stdarg.h</label>
      </node>
      <node id="4">
        <label>wsh_shell_str.h</label>
        <link refid="wsh__shell__str_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>stdint.h</label>
      </node>
      <node id="13">
        <label>stdlib.h</label>
      </node>
      <node id="2">
        <label>wsh_shell_cfg.h</label>
      </node>
      <node id="10">
        <label>stddef.h</label>
      </node>
      <node id="6">
        <label>wsh_shell_option.h</label>
        <link refid="wsh__shell__option_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>wsh_shell_io.h</label>
        <link refid="wsh__shell__io_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>string.h</label>
      </node>
      <node id="7">
        <label>wsh_shell_types.h</label>
        <link refid="wsh__shell__types_8h"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>wsh_shell_history.h</label>
        <link refid="wsh__shell__history_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/wsh_shell_esc.h</label>
        <link refid="wsh__shell__esc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>src/wsh_shell.h</label>
        <link refid="wsh__shell_8h"/>
      </node>
      <node id="1">
        <label>src/wsh_shell_esc.h</label>
        <link refid="wsh__shell__esc_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structWshShellEsc__Action__t" prot="public">WshShellEsc_Action_t</innerclass>
    <innerclass refid="structWshShellEsc__Storage__t" prot="public">WshShellEsc_Storage_t</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="wsh__shell__esc_8h_1a67d41ca544ed4097586248da3ec1b125" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* WshShellEsc_Hadler_t) (WshShellHistory_IO_t *pHistIO, WshShellIO_CommandLine_t *pCommandLine)</definition>
        <argsstring>)(WshShellHistory_IO_t *pHistIO, WshShellIO_CommandLine_t *pCommandLine)</argsstring>
        <name>WshShellEsc_Hadler_t</name>
        <briefdescription>
<para>Escape sequence handler function type. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wsh_shell_esc.h" line="26" column="9" bodyfile="src/wsh_shell_esc.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="wsh__shell__esc_8h_1af4bcf72f65829cd0ac65da2ab6985f99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WshShellEsc_Handler</definition>
        <argsstring>(WshShellHistory_IO_t *pHistIO, WshShellIO_CommandLine_t *pCommandLine, WshShellEsc_Storage_t *pEscStorage, const WshShell_Char_t symbol)</argsstring>
        <name>WshShellEsc_Handler</name>
        <param>
          <type><ref refid="structWshShellHistory__IO__t" kindref="compound">WshShellHistory_IO_t</ref> *</type>
          <declname>pHistIO</declname>
        </param>
        <param>
          <type><ref refid="structWshShellIO__CommandLine__t" kindref="compound">WshShellIO_CommandLine_t</ref> *</type>
          <declname>pCommandLine</declname>
        </param>
        <param>
          <type><ref refid="structWshShellEsc__Storage__t" kindref="compound">WshShellEsc_Storage_t</ref> *</type>
          <declname>pEscStorage</declname>
        </param>
        <param>
          <type>const WshShell_Char_t</type>
          <declname>symbol</declname>
        </param>
        <briefdescription>
<para>Handles incoming escape sequence character. </para>
        </briefdescription>
        <detaileddescription>
<para>Matches current buffer against known ANSI sequences and triggers appropriate handler.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pHistIO</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to shell history interface </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pCommandLine</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to input interaction buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pEscStorage</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to escape sequence buffer </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>Incoming character to append </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wsh_shell_esc.h" line="55" column="6" bodyfile="src/wsh_shell_esc.c" bodystart="67" bodyend="86" declfile="src/wsh_shell_esc.h" declline="55" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="wsh__shell__esc_8h_1a31c8a37296536f7e7a16070945416b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void WshShellEsc_StartSeq</definition>
        <argsstring>(WshShellEsc_Storage_t *pEscStorage)</argsstring>
        <name>WshShellEsc_StartSeq</name>
        <param>
          <type><ref refid="structWshShellEsc__Storage__t" kindref="compound">WshShellEsc_Storage_t</ref> *</type>
          <declname>pEscStorage</declname>
        </param>
        <briefdescription>
<para>Starts a new escape sequence. </para>
        </briefdescription>
        <detaileddescription>
<para>Initializes the escape buffer with ESC char.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pEscStorage</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to escape sequence buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wsh_shell_esc.h" line="65" column="6" bodyfile="src/wsh_shell_esc.c" bodystart="88" bodyend="95" declfile="src/wsh_shell_esc.h" declline="65" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="wsh__shell__esc_8h_1a07c38fd3528e0db9ad60440514f8c22a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>WshShell_Bool_t</type>
        <definition>WshShell_Bool_t WshShellEsc_IsSeqStarted</definition>
        <argsstring>(WshShellEsc_Storage_t *pEscStorage)</argsstring>
        <name>WshShellEsc_IsSeqStarted</name>
        <param>
          <type><ref refid="structWshShellEsc__Storage__t" kindref="compound">WshShellEsc_Storage_t</ref> *</type>
          <declname>pEscStorage</declname>
        </param>
        <briefdescription>
<para>Checks if escape sequence is in progress. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pEscStorage</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to escape sequence buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>WshShell_Bool_t <computeroutput>true</computeroutput> if sequence has started </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/wsh_shell_esc.h" line="73" column="17" bodyfile="src/wsh_shell_esc.c" bodystart="97" bodyend="104" declfile="src/wsh_shell_esc.h" declline="73" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Escape sequence handling logic for WSH shell. </para>
    </briefdescription>
    <detaileddescription>
<para>Provides functionality to process ANSI escape sequences (e.g., arrow keys) and interact with shell history and input buffer.</para>
<para><simplesect kind="author"><para>Whoosh Embedded Team </para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2025 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__WSH_SHELL_ESC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__WSH_SHELL_ESC_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;wsh_shell_cfg.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wsh__shell__history_8h" kindref="compound">wsh_shell_history.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="wsh__shell__io_8h" kindref="compound">wsh_shell_io.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="wsh__shell__esc_8h_1a67d41ca544ed4097586248da3ec1b125" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="wsh__shell__esc_8h_1a67d41ca544ed4097586248da3ec1b125" kindref="member">WshShellEsc_Hadler_t</ref>)(<ref refid="structWshShellHistory__IO__t" kindref="compound">WshShellHistory_IO_t</ref>*<sp/>pHistIO,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structWshShellIO__CommandLine__t" kindref="compound">WshShellIO_CommandLine_t</ref>*<sp/>pCommandLine);</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="32" refid="structWshShellEsc__Action__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33" refid="structWshShellEsc__Action__t_1a4f900d47cb45759e7eba78ddf83742f2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WshShell_Char_t*<sp/><ref refid="structWshShellEsc__Action__t_1a4f900d47cb45759e7eba78ddf83742f2" kindref="member">Sequence</ref>;<sp/></highlight></codeline>
<codeline lineno="34" refid="structWshShellEsc__Action__t_1afa794b7216c5acd42bcb94fa0297e177" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="wsh__shell__esc_8h_1a67d41ca544ed4097586248da3ec1b125" kindref="member">WshShellEsc_Hadler_t</ref><sp/><ref refid="structWshShellEsc__Action__t_1afa794b7216c5acd42bcb94fa0297e177" kindref="member">Handler</ref>;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><ref refid="structWshShellEsc__Action__t" kindref="compound">WshShellEsc_Action_t</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="structWshShellEsc__Storage__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="41" refid="structWshShellEsc__Storage__t_1a007836f5e3b971e2fc17e26e8f4b9dbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>WshShell_Size_t<sp/><ref refid="structWshShellEsc__Storage__t_1a007836f5e3b971e2fc17e26e8f4b9dbb" kindref="member">Cnt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="42" refid="structWshShellEsc__Storage__t_1a23429db3def2a064b45e6f7d05084f1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>WshShell_Char_t<sp/>Buff[WSH_SHELL_ESC_BUFF_LEN];<sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/><ref refid="structWshShellEsc__Storage__t" kindref="compound">WshShellEsc_Storage_t</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wsh__shell__esc_8h_1af4bcf72f65829cd0ac65da2ab6985f99" kindref="member">WshShellEsc_Handler</ref>(<ref refid="structWshShellHistory__IO__t" kindref="compound">WshShellHistory_IO_t</ref>*<sp/>pHistIO,<sp/><ref refid="structWshShellIO__CommandLine__t" kindref="compound">WshShellIO_CommandLine_t</ref>*<sp/>pCommandLine,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structWshShellEsc__Storage__t" kindref="compound">WshShellEsc_Storage_t</ref>*<sp/>pEscStorage,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>WshShell_Char_t<sp/>symbol);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="wsh__shell__esc_8h_1a31c8a37296536f7e7a16070945416b35" kindref="member">WshShellEsc_StartSeq</ref>(<ref refid="structWshShellEsc__Storage__t" kindref="compound">WshShellEsc_Storage_t</ref>*<sp/>pEscStorage);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">WshShell_Bool_t<sp/><ref refid="wsh__shell__esc_8h_1a07c38fd3528e0db9ad60440514f8c22a" kindref="member">WshShellEsc_IsSeqStarted</ref>(<ref refid="structWshShellEsc__Storage__t" kindref="compound">WshShellEsc_Storage_t</ref>*<sp/>pEscStorage);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal">}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__WSH_SHELL_ESC_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/wsh_shell_esc.h"/>
  </compounddef>
</doxygen>
